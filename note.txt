默认开启的某些应用需要至少一个数据表，所以，在使用他们之前需要在数据库中创建一些表。请执行以下命令：
python manage.py migrate

通过运行 makemigrations 命令，Django 会检测你对模型文件的修改（在这种情况下，你已经取得了新的），
并且把修改的部分储存为一次 迁移。
python manage.py makemigrations polls

sqlmigrate 命令接收一个迁移的名称，然后返回对应的 SQL
python manage.py sqlmigrate polls 0001

现在，再次运行 migrate 命令，在数据库里创建新定义的模型的数据表。
这个 migrate 命令选中所有还没有执行过的迁移（Django 通过在数据库中创建一个特殊的表
django_migrations 来跟踪执行过哪些迁移）并应用在数据库上 - 也就是将你对模型的更改同步到数据库结构上。


python manage.py shell

创建一个能登录管理页面的用户。请运行下面的命令：
python manage.py createsuperuser
管理页面：http://127.0.0.1:8000/admin/"


Django 中的视图的概念是「一类具有相同功能和模板的网页的集合」。比如，在一个博客应用中，你可能会创建如下几个视图：
博客首页——展示最近的几项内容。
内容“详情”页——详细展示某项内容。
以年为单位的归档页——展示选中的年份里各个月份创建的内容。
以月为单位的归档页——展示选中的月份里各天创建的内容。
以天为单位的归档页——展示选中天里创建的所有内容。
评论处理器——用于响应为一项内容添加评论的操作。

每个视图必须要做的只有两件事：返回一个包含被请求页面内容的 HttpResponse 对象，或者抛出一个异常，比如 Http404 。至于你还想干些什么，随便你

这里有个问题：页面的设计写死在视图函数的代码里的。如果你想改变页面的样子，你需要编辑 Python 代码。
所以让我们使用 Django 的模板系统，只要创建一个视图，就可以将页面的设计从代码中分离出来。
首先，在你的 polls 目录里创建一个 templates 目录。Django 将会在这个目录里查找模板文件。
你项目的 TEMPLATES 配置项描述了 Django 如何载入和渲染模板。
默认的设置文件设置了 DjangoTemplates 后端，并将 APP_DIRS 设置成了 True。
这一选项将会让 DjangoTemplates 在每个 INSTALLED_APPS 文件夹中寻找 "templates" 子目录。
这就是为什么尽管我们没有像在第二部分中那样修改 DIRS 设置，Django 也能正确找到 polls 的模板位置的原因。


针对视图的测试：
Django 测试工具之 Client¶